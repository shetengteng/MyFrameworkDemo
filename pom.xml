<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.stt.myFrameworkDemo</groupId>
  <artifactId>MyFrameworkDemo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>框架练习使用</name>
  
  <modules>
  	<module>ActiveMQ_Demo</module>
    <module>ActiveMQ_Spring</module>
	<module>SpringMVC_Demo</module>
	<module>Zookeeper_Demo</module>
  </modules>
  
   <!-- 统一配置构件的版本号 -->
  <properties>
  	<junit.version>4.12</junit.version>
   	<spring.version>4.3.5.RELEASE</spring.version>
  	<activemq.version>5.11.1</activemq.version>
  	<jackson.version>2.8.1</jackson.version>
  </properties>
  
  <!-- 依赖管理  -->
  <!-- 如果没有该标签，那么父项目中的所有jar包，子项目都默认加载 -->
  <!-- 如果添加了该标签，那么子项目要添加和父项目同样的jar包，需要有g和a即可 -->
  <dependencyManagement>
	<dependencies>
		<dependency>
		  <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${junit.version}</version>
          <scope>test</scope>
		</dependency>
		<!-- 对war包的支持 -->
		 <!-- 添加servlet支持 -->
		 <dependency>
		   <groupId>javax.servlet</groupId>
		   <artifactId>javax.servlet-api</artifactId>
		   <version>3.1.0</version>
		 </dependency>
		 <!-- 添加jsp支持 -->
		 <dependency>
		   <groupId>javax.servlet.jsp</groupId>
		   <artifactId>javax.servlet.jsp-api</artifactId>
		   <version>2.3.1</version>
		 </dependency>
		 <!-- 添加jtl支持 -->
		 <dependency>
		   <groupId>javax.servlet</groupId>
		   <artifactId>jstl</artifactId>
		   <version>1.2</version>
		 </dependency>
		
		<!-- ********Spring start********* -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope> 
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- ******** Spring end ********* -->
		
		<!-- ******** activemq start ******** -->
		<dependency>
		    <groupId>org.apache.activemq</groupId>
		    <artifactId>activemq-all</artifactId>
		    <version>${activemq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
		  	<version>${activemq.version}</version>
		</dependency>
		<!-- ******** activemq end ******** -->
		
		<!-- ******** jackson start ******** -->
	 	<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>${jackson.version}</version>
		</dependency> 
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		<!-- ******** jackson end ******** -->
		
		<!-- ******** mail start ******** -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<!-- 该版本能用，其他的版本好像有问题 -->
  			<version>1.4.4</version>
		</dependency>
		<!-- ******** mail end ******** -->
		
	</dependencies>
  </dependencyManagement>
  
  <!-- 
 执行mvn 报错 source-1.5 中不支持 diamond运算符
指定Maven的版本，并且指定Maven使用的jdk版本
同时解决Override报错问题
 -->
     <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
  
</project>